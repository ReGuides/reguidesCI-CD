// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è API –Ω–æ–≤–æ—Å—Ç–µ–π
const fetch = require('node-fetch');

async function testNewsAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –Ω–æ–≤–æ—Å—Ç–µ–π...\n');

  try {
    // –¢–µ—Å—Ç 1: GET /api/news
    console.log('1. –¢–µ—Å—Ç–∏—Ä—É–µ–º GET /api/news');
    const response = await fetch('http://localhost:3000/api/news');
    const data = await response.json();
    
    console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    console.log('–£—Å–ø–µ—Ö:', data.success);
    
    if (data.success) {
      console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π:', data.data?.length || 0);
      console.log('–ü–∞–≥–∏–Ω–∞—Ü–∏—è:', data.pagination);
    } else {
      console.log('–û—à–∏–±–∫–∞:', data.error);
      console.log('–î–µ—Ç–∞–ª–∏:', data.details);
    }
    
    console.log('\n' + '='.repeat(50) + '\n');

    // –¢–µ—Å—Ç 2: GET /api/news —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    console.log('2. –¢–µ—Å—Ç–∏—Ä—É–µ–º GET /api/news?limit=5');
    const response2 = await fetch('http://localhost:3000/api/news?limit=5');
    const data2 = await response2.json();
    
    console.log('–°—Ç–∞—Ç—É—Å:', response2.status);
    console.log('–£—Å–ø–µ—Ö:', data2.success);
    
    if (data2.success) {
      console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π:', data2.data?.length || 0);
    } else {
      console.log('–û—à–∏–±–∫–∞:', data2.error);
      console.log('–î–µ—Ç–∞–ª–∏:', data2.details);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testNewsAPI();
