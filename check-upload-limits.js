// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ public/images
const checkImageSizes = (dir) => {
  const files = fs.readdirSync(dir, { withFileTypes: true });
  let totalSize = 0;
  let fileCount = 0;
  let largeFiles = [];

  files.forEach(file => {
    if (file.isFile()) {
      const filePath = path.join(dir, file.name);
      const stats = fs.statSync(filePath);
      const sizeInMB = (stats.size / (1024 * 1024)).toFixed(2);
      
      totalSize += stats.size;
      fileCount++;
      
      if (stats.size > 10 * 1024 * 1024) { // > 10MB
        largeFiles.push({
          name: file.name,
          size: sizeInMB + ' MB'
        });
      }
    } else if (file.isDirectory()) {
      const subDir = path.join(dir, file.name);
      const subResult = checkImageSizes(subDir);
      totalSize += subResult.totalSize;
      fileCount += subResult.fileCount;
      largeFiles.push(...subResult.largeFiles);
    }
  });

  return { totalSize, fileCount, largeFiles };
};

const imagesDir = path.join(__dirname, 'public', 'images');
if (fs.existsSync(imagesDir)) {
  const result = checkImageSizes(imagesDir);
  const totalSizeInMB = (result.totalSize / (1024 * 1024)).toFixed(2);
  
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:`);
  console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${result.fileCount}`);
  console.log(`   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${totalSizeInMB} MB`);
  
  if (result.largeFiles.length > 0) {
    console.log(`\n‚ö†Ô∏è  –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã (>10MB):`);
    result.largeFiles.forEach(file => {
      console.log(`   - ${file.name}: ${file.size}`);
    });
  } else {
    console.log(`\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –º–µ–Ω—å—à–µ 10MB`);
  }
} else {
  console.log('‚ùå –ü–∞–ø–∫–∞ public/images –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
}

console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('1. –°–∂–∏–º–∞–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π');
console.log('2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WebP —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –ª—É—á—à–µ–≥–æ —Å–∂–∞—Ç–∏—è');
console.log('3. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–µ–±-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è');
console.log('4. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 10MB');
